{"version":3,"sources":["components/Header/StyledHeader.js","components/Header/Header.js","components/ContactList/StyledContactList.js","components/Contact/StyledContact.js","context/contacts/contactContext.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Footer/StyledFooter.js","components/Footer/Footer.js","context/contacts/contactReducer.js","context/types.js","context/contacts/ContactState.js","components/ContactForm/StyledContactForm.js","components/ContactForm/ContactForm.js","components/Backdrop/StyledBackdrop.js","components/Backdrop/Backdrop.js","components/Modal/StyledModal.js","components/Modal/Modal.js","App.js","components/styles/GlobalStyle.js","index.js"],"names":["StyledHeader","styled","header","Header","src","process","alt","className","div","StyledContact","contactContext","createContext","Contact","contact","firstname","lastname","email","id","avatar","editContact","deleteContact","useContext","ContactContext","onClick","ContactList","state","length","map","el","key","StyledFooter","footer","Footer","contactReducer","action","type","payload","Date","now","filter","contacts","ContactState","props","initialState","useReducer","ContactReducer","localData","localStorage","getItem","JSON","parse","dispatch","useEffect","setItem","stringify","Provider","value","getContacts","updateContact","addContact","children","StyledContactAdd","ContactForm","actionType","toggleModal","useState","setFirstname","setLastname","setEmail","StyledContactForm","name","onChange","e","target","placeholder","preventDefault","StyledBackdrop","Backdrop","proTypes","PropTypes","func","isRequired","StyledModal","Modal","App","isUpdateMode","setIsUpdateMode","setContact","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.843c7eee.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst StyledHeader = styled.header`\r\n  background-color: #006989ff;\r\n  color: #fff;\r\n  margin-bottom: 15px;\r\n  text-align: center;\r\n  padding: 2px 0px;\r\n  font-family: \"\", sans-serif;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  .logo {\r\n    margin-right: 5px;\r\n  }\r\n`;\r\n\r\nexport default StyledHeader;\r\n","import React from \"react\";\r\nimport StyledHeader from \"./StyledHeader\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <StyledHeader>\r\n      <img\r\n        src={process.env.PUBLIC_URL + \"/favicon-32x32.png\"}\r\n        alt=\"Logo\"\r\n        className=\"logo\"\r\n      />\r\n      <h1>CONTACTECH</h1>\r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledContaceList = styled.div``;\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledContact = styled.div`\r\n  border-bottom: 0.5px solid rgba(0, 0, 0, 0.15);\r\n  display: flex;\r\n  &:hover {\r\n    background-color: #eeeeee;\r\n  }\r\n  .avatar-img {\r\n    padding: 5px;\r\n    object-fit: contain;\r\n    //box-shadow: 2px 2px 10px 0px rgba(0, 0, 0, 0.5);\r\n  }\r\n  .info {\r\n    margin-left: 10px;\r\n    .fullname {\r\n      font-weight: bold;\r\n      text-transform: capitalize;\r\n    }\r\n    .email {\r\n    }\r\n  }\r\n  .actions {\r\n    .icon {\r\n      margin: 16px 5px;\r\n      transition: all 0.1s ease;\r\n\r\n      &:hover {\r\n        cursor: pointer;\r\n        transform: scale(1.2);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default StyledContact;\r\n","import { createContext } from \"react\";\r\n\r\nconst contactContext = createContext();\r\n\r\nexport default contactContext;\r\n","import React, { useContext } from \"react\";\r\nimport StyledContact from \"./StyledContact\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactContext from \"../../context/contacts/contactContext\";\r\n\r\nconst Contact = ({\r\n  contact: { firstname, lastname, email, id, avatar },\r\n  editContact,\r\n}) => {\r\n  const { deleteContact } = useContext(ContactContext);\r\n  return (\r\n    <StyledContact>\r\n      <img\r\n        className=\"avatar-img\"\r\n        src={avatar}\r\n        alt={`Avatar from ${firstname} ${lastname}`}\r\n      />\r\n      <div className=\"info\">\r\n        <p className=\"fullname\">{`${firstname} ${lastname}`}</p>\r\n        <p className=\"email\">{`${email}`}</p>\r\n      </div>\r\n      <div className=\"actions\">\r\n        <img\r\n          className=\"icon\"\r\n          src={process.env.PUBLIC_URL + \"/edit-icon.svg\"}\r\n          alt=\"Edit Icon\"\r\n          onClick={() => editContact(firstname, lastname, email, id, avatar)}\r\n        />\r\n        <img\r\n          className=\"icon\"\r\n          src={process.env.PUBLIC_URL + \"/delete-icon.svg\"}\r\n          alt=\"Delete Icon\"\r\n          onClick={() => deleteContact(id)}\r\n        />\r\n      </div>\r\n    </StyledContact>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n  editContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React, { useContext } from \"react\";\r\nimport StyledContactList from \"./StyledContactList\";\r\nimport Contact from \"../Contact/Contact\";\r\nimport ContactContext from \"../../context/contacts/contactContext\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactList = ({ editContact }) => {\r\n  const { state } = useContext(ContactContext);\r\n  return (\r\n    <div>\r\n      {state.length > 0 &&\r\n        state.map((el) => (\r\n          <Contact key={el.id} contact={el} editContact={editContact} />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  editContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledFooter = styled.footer`\r\n  text-align: center;\r\n  padding: 20px 0px;\r\n  border-top: 1px solid #e7e7e9;\r\n  margin-top: 20px;\r\n  color: #6e6d7a;\r\n  flex-shrink: 0;\r\n`;\r\n\r\nexport default StyledFooter;\r\n","import React from \"react\";\r\nimport StyledFooter from \"./StyledFooter\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <StyledFooter>\r\n      <div>© 2020 Raphael Züblin. All rights reserved.</div>\r\n    </StyledFooter>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import * as contactTypes from \"../types\";\r\n\r\nfunction contactReducer(state, action) {\r\n  switch (action.type) {\r\n    case contactTypes.ADD_CONTACT:\r\n      return [\r\n        ...state,\r\n        {\r\n          firstname: action.payload.firstname,\r\n          lastname: action.payload.lastname,\r\n          email: action.payload.email,\r\n          avatar: `https://api.adorable.io/avatars/50/${\r\n            action.payload.firstname + action.payload.lastname\r\n          }@adorable`,\r\n          id: Date.now(),\r\n        },\r\n      ];\r\n    case contactTypes.DELETE_CONTACT:\r\n      return state.filter((el) => el.id !== action.payload.id);\r\n    case contactTypes.GET_CONTACTS:\r\n      return { ...state, contacts: action.payload };\r\n    case contactTypes.UPDATE_CONTACT:\r\n      return state.map((el) =>\r\n        el.id === action.payload.id\r\n          ? {\r\n              id: el.id,\r\n              firstname: action.payload.firstname,\r\n              lastname: action.payload.lastname,\r\n              email: action.payload.email,\r\n              avatar: `https://api.adorable.io/avatars/50/${\r\n                action.payload.firstname + action.payload.lastname\r\n              }@adorable`,\r\n            }\r\n          : el\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default contactReducer;\r\n","export const ADD_CONTACT = \"ADD_CONTACT\";\r\nexport const UPDATE_CONTACT = \"UPDATE_CONTACT\";\r\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\r\nexport const GET_CONTACTS = \"GET_CONTACTS\";\r\n","import React, { useReducer, useEffect } from \"react\";\r\nimport ContactContext from \"./contactContext\";\r\nimport ContactReducer from \"./contactReducer\";\r\nimport * as contactTypes from \"../types\";\r\n\r\nconst ContactState = (props) => {\r\n  const initialState = [\r\n    {\r\n      id: 1,\r\n      firstname: \"Hans\",\r\n      lastname: \"Musterman\",\r\n      email: \"hans@muster.de\",\r\n      avatar: `https://api.adorable.io/avatars/50/hansmusterman@adorable`,\r\n    },\r\n    {\r\n      id: 2,\r\n      firstname: \"Hanna\",\r\n      lastname: \"Musterman\",\r\n      email: \"hanna@muster.de\",\r\n      avatar: `https://api.adorable.io/avatars/50/hannamusterman@adorable`,\r\n    },\r\n    {\r\n      id: 3,\r\n      firstname: \"Hagrid\",\r\n      lastname: \"Musterman\",\r\n      email: \"hagrid@muster.de\",\r\n      avatar: `https://api.adorable.io/avatars/50/hagridmusterman@adorable`,\r\n    },\r\n  ];\r\n  const [state, dispatch] = useReducer(ContactReducer, [], () => {\r\n    const localData = localStorage.getItem(\"contactListStorage\");\r\n    return localData ? JSON.parse(localData) : initialState;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"contactListStorage\", JSON.stringify(state));\r\n  }, [state]);\r\n\r\n  const addContact = (firstname, lastname, email) => {\r\n    dispatch({\r\n      type: contactTypes.ADD_CONTACT,\r\n      payload: { firstname, lastname, email },\r\n    });\r\n  };\r\n\r\n  const getContacts = () => {\r\n    dispatch({\r\n      type: contactTypes.GET_CONTACTS,\r\n      payload: [],\r\n    });\r\n  };\r\n\r\n  const deleteContact = (id) => {\r\n    dispatch({\r\n      type: contactTypes.DELETE_CONTACT,\r\n      payload: { id },\r\n    });\r\n  };\r\n\r\n  const updateContact = (firstname, lastname, email, id) => {\r\n    dispatch({\r\n      type: contactTypes.UPDATE_CONTACT,\r\n      payload: { firstname, lastname, email, id },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ContactContext.Provider\r\n      value={{\r\n        state,\r\n        deleteContact,\r\n        getContacts,\r\n        updateContact,\r\n        addContact,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ContactContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ContactState;\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledContactAdd = styled.div`\r\n  form {\r\n    padding: 10px 0px;\r\n    input {\r\n      margin: 5px auto;\r\n      padding: 10px;\r\n      width: 100%;\r\n      display: inline-block;\r\n      box-sizing: border-box;\r\n    }\r\n    button {\r\n      margin-top: 10px;\r\n      background-color: #ff9d17ff;\r\n      border: none;\r\n      border-radius: 4px;\r\n      padding: 10px 20px;\r\n      color: #222;\r\n    }\r\n    .btn {\r\n      text-align: center;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default StyledContactAdd;\r\n","import React, { useState, useContext } from \"react\";\r\nimport StyledContactForm from \"./StyledContactForm\";\r\nimport ContactContext from \"../../context/contacts/contactContext\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactForm = ({ actionType, contact, toggleModal }) => {\r\n  const [firstname, setFirstname] = useState(contact ? contact.firstname : \"\");\r\n  const [lastname, setLastname] = useState(contact ? contact.lastname : \"\");\r\n  const [email, setEmail] = useState(contact ? contact.email : \"\");\r\n  const { addContact, updateContact } = useContext(ContactContext);\r\n\r\n  return (\r\n    <StyledContactForm>\r\n      <h3>{actionType === \"ADD\" ? \"Add new Contact\" : \"Update Contact\"}</h3>\r\n      <form>\r\n        <div className=\"form-control\">\r\n          <label>Firstname </label>\r\n          <input\r\n            type=\"text\"\r\n            value={firstname}\r\n            name=\"firstname\"\r\n            onChange={(e) => setFirstname(e.target.value)}\r\n            placeholder=\"Enter firstname...\"\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label>Lastname</label>\r\n          <input\r\n            type=\"text\"\r\n            value={lastname}\r\n            name=\"lastname\"\r\n            onChange={(e) => setLastname(e.target.value)}\r\n            placeholder=\"Enter lastname...\"\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            name=\"email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            placeholder=\"Enter email...\"\r\n          />\r\n        </div>\r\n        <div className=\"btn\">\r\n          <button\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              if (firstname && lastname && email) {\r\n                if (actionType === \"ADD\") {\r\n                  addContact(firstname, lastname, email);\r\n                  setFirstname(\"\");\r\n                  setLastname(\"\");\r\n                  setEmail(\"\");\r\n                } else if (actionType === \"UPDATE\") {\r\n                  updateContact(firstname, lastname, email, contact.id);\r\n                  setFirstname(\"\");\r\n                  setLastname(\"\");\r\n                  setEmail(\"\");\r\n                  toggleModal();\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            {actionType === \"ADD\" ? \"Add\" : \"Update\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </StyledContactForm>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  actionType: PropTypes.string.isRequired,\r\n  contact: PropTypes.object,\r\n  closeModal: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledBackdrop = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: fixed;\r\n  z-index: 100;\r\n  left: 0;\r\n  top: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nexport default StyledBackdrop;\r\n","import React from \"react\";\r\nimport StyledBackdrop from \"./StyledBackdrop\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Backdrop({ toggleModal }) {\r\n  return <StyledBackdrop onClick={toggleModal}></StyledBackdrop>;\r\n}\r\n\r\nBackdrop.proTypes = {\r\n  toggleModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Backdrop;\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledModal = styled.div`\r\n  position: fixed;\r\n  z-index: 500;\r\n  background-color: white;\r\n  width: 70%;\r\n  border: 1px solid #ccc;\r\n  box-shadow: 1px 1px 1px black;\r\n  padding: 16px;\r\n  left: 15%;\r\n  top: 30%;\r\n  box-sizing: border-box;\r\n  transition: all 0.3s ease-out;\r\n\r\n  @media (min-width: 600px) {\r\n    width: 500px;\r\n    left: calc(50% - 250px);\r\n  }\r\n`;\r\n\r\nexport default StyledModal;\r\n","import React, { Fragment } from \"react\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\nimport StyledModal from \"./StyledModal\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Modal({ children, toggleModal }) {\r\n  return (\r\n    <Fragment>\r\n      <Backdrop toggleModal={toggleModal} />\r\n      <StyledModal>{children}</StyledModal>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  toggleModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\nimport Header from \"./components/Header/Header\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Footer from \"./components/Footer/Footer\";\nimport ContactState from \"./context/contacts/ContactState\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Modal from \"./components/Modal/Modal\";\n\nfunction App() {\n  const [isUpdateMode, setIsUpdateMode] = useState(false);\n  const [contact, setContact] = useState(\"\");\n\n  const toggleModal = () => {\n    setIsUpdateMode(!isUpdateMode);\n  };\n  const editContact = (firstname, lastname, email, id, avatar) => {\n    setIsUpdateMode(!isUpdateMode);\n    setContact({ firstname, lastname, email, id, avatar });\n  };\n  return (\n    <ContactState>\n      <Header />\n      {isUpdateMode && (\n        <Modal toggleModal={toggleModal}>\n          <ContactForm\n            actionType=\"UPDATE\"\n            contact={contact}\n            toggleModal={toggleModal}\n          />\n        </Modal>\n      )}\n      <div className=\"main container\">\n        <ContactList editContact={editContact} />\n        <ContactForm actionType=\"ADD\" />\n      </div>\n      <Footer />\n    </ContactState>\n  );\n}\n\nexport default App;\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  $aero-blue: #c7efcfff;\r\n  $beige: #eef5dbff;\r\n  $orange-peel: #ff9d17ff;\r\n  $blue-sapphire: #006989ff;\r\n  $cg-blue: #007090ff;\r\n  html, body{\r\n    height: 100%;\r\n  }\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .container{\r\n    max-width: 900px;\r\n    margin: auto;\r\n    padding: 10px;\r\n  }\r\n  .main{\r\n    flex: 1 0 auto;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport GlobalStyle from \"./components/styles/GlobalStyle\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <>\n      <GlobalStyle />\n      <App />\n    </>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}